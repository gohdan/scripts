server {
    listen ##IP##80;
    server_name ##DOMAIN_NAME## www.##DOMAIN_NAME##;
    rewrite ^ https://##DOMAIN_NAME##$request_uri? permanent; #301 redirect
}

server {
    listen ##IP##443 ssl http2;
    server_name www.##DOMAIN_NAME##;

    # HTTPS block
    ssl_certificate /etc/letsencrypt/live/##DOMAIN_NAME##/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/##DOMAIN_NAME##/privkey.pem;

    # Enable HSTS. This forces SSL on clients that respect it, most modern browsers. The includeSubDomains flag is optional.
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score as of Sept 2015.
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';

    rewrite ^ https://##DOMAIN_NAME##$request_uri? permanent; #301 redirect
}


server {
    server_name ##DOMAIN_NAME##;
    listen ##IP##443 ssl http2;

    set $root_path /home/##USER_NAME##/www;

    access_log /home/##USER_NAME##/logs/nginx_access.log;
    error_log /home/##USER_NAME##/logs/nginx_error.log notice;

    # HTTPS block
    ssl_certificate /etc/letsencrypt/live/##DOMAIN_NAME##/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/##DOMAIN_NAME##/privkey.pem;

    # Enable HSTS. This forces SSL on clients that respect it, most modern browsers. The includeSubDomains flag is optional.
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # Set caches, protocols, and accepted ciphers. This config will merit an A+ SSL Labs score as of Sept 2015.
    ssl_session_cache shared:SSL:20m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5';

    include /etc/nginx/wordpress_cache/wordpress.conf;
    include /etc/nginx/wordpress_cache/restrictions.conf;
    include /etc/nginx/wordpress_cache/w3-total-cache.conf;
    #include /etc/nginx/wordpress_cache/rocket-cache.conf;
    #include /etc/nginx/wordpress_cache/fastest-cache.conf;
    root $root_path;
    charset off;
    ssi on;
    disable_symlinks if_not_owner from=$root_path;
    index index.html index.php;
    location / {
        # Wordpress without cache or Rocket Cache
        # try_files $uri $uri/ /index.php?$args;
        # W3 total cache
        try_files /wp-content/cache/page_enhanced/${host}${cache_uri}_index.html $uri $uri/ /index.php?$args;
        # WP Super Cache
        # try_files /wp-content/cache/supercache/${host}/${cache_uri}/index.html $uri $uri/ /index.php?$args ;
        # WP Fastest Cache
        # set $serve_URL $fullurl${uri}index.html;
        # add_header Nucuta-Cache-Location $serve_URL;
        # try_files $serve_URL $uri $uri/ /index.php$is_args$args;
        location ~ [^/]\.ph(p\d*|tml)$ {
            try_files /does_not_exists @php;
        }
    }
    location @php {
        fastcgi_pass unix:/var/run/php_##USER_NAME##.sock;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        fastcgi_param   PATH_INFO         $fastcgi_path_info;
        fastcgi_param  SCRIPT_FILENAME  $root_path$fastcgi_script_name;
        fastcgi_intercept_errors on;
        include fastcgi_params;
    }
}
